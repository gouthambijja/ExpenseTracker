@using ExpenseTracker.Client.ViewModels;
@inject IProfileViewModel _profileViewModel
@inject IToastService toastService
<div class=" vw-100 d-flex justify-content-center align-content-center">
    <form  class="rounded bg-white p-5" @onsubmit="UpdateTransaction">
        <div class="form-floating mb-3 ">
            <input type="password" required class="form-control" @bind="oldPassword"  id="oldPassword" placeholder="old password">
            <label for="oldPassword">Old Password</label>
        </div>
        <div class="form-floating mb-3">
            <input type="password" required pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}" title="Must contain at least one  number and one uppercase and lowercase letter, and at least 8 or more characters" class="form-control" @bind="newPassword" id="newPassword" placeholder="new password">
            <label for="newPassword">New Password</label>
        </div>
        <div class="form-floating mb-3">
            <input type="password" required class="form-control" @bind="confirmPassword" id="confirmPassword" placeholder="ConfirmPassword">
            <label for="ConfirmPassword">Confirm Password</label>
        </div>
        <button class="btn btn-primary">Submit</button>
    </form>

</div>
@code {
    [CascadingParameter] BlazoredModalInstance blazoredModal { get; set; }
    public string oldPassword{ get; set; }
    public string newPassword{ get; set; }
    public string confirmPassword{ get; set; }
    public async void UpdateTransaction()
    {
        if (confirmPassword == newPassword)
        {
            await _profileViewModel.ChangePassword(newPassword, oldPassword);
            toastService.ShowSuccess("password change success!");
            await blazoredModal.CloseAsync();
        }
        else
        {
            toastService.ShowWarning("passwords not matching!");
        }
    }
}
